name: commitlint
on:
  workflow_call:
    inputs:
      node-version:
        required: false
        type: string
        default: '20'
      # Modo estricto: valida TODOS los commits del PR y TAMBIÉN el título del PR (para squash)
      strict:
        required: false
        type: boolean
        default: true

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}

      - name: Install commitlint
        run: |
          npm i -g @commitlint/cli @commitlint/config-conventional

      - name: Create commitlint config
        run: |
          cat > commitlint.config.cjs << 'EOF'
          module.exports = {
            extends: ['@commitlint/config-conventional'],
            rules: {
              // Permite acentos y texto normal en el subject; evita formatos en mayúsculas tipo título
              'subject-case': [2, 'never', ['sentence-case', 'start-case', 'pascal-case', 'upper-case']],
            },
          };
          EOF

      - name: Lint PR commits (strict)
        if: ${{ inputs.strict == true }}
        run: |
          BASE="origin/${{ github.base_ref }}"
          # Obtiene los subjects de commits del PR (HEAD incluye el merge ref del PR)
          COMMITS=$(git log "$BASE"..HEAD --pretty=%s || true)

          if [ -z "$COMMITS" ]; then
            echo "No commit subjects found between $BASE and HEAD."
            exit 0
          fi

          echo "Checking commits:"
          echo "$COMMITS"
          echo "$COMMITS" | npx commitlint --config commitlint.config.cjs

      - name: Lint PR title (useful for squash merge)
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          echo "PR title: $TITLE"
          echo "$TITLE" | npx commitlint --config commitlint.config.cjs
